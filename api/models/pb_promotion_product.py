from ..extensions import db
from sqlalchemy.dialects.mysql import DOUBLE


class PBPromotionProduct(db.Model):
    __tablename__ = 'pb_promotion_product'
    id = db.Column(db.BigInteger, primary_key = True)
    promotion_id = db.Column(db.BigInteger, nullable=False)
    product_id = db.Column(db.BigInteger, nullable=False)
    product_code = db.Column(db.String(255), nullable=False)
    # product_description = db.Column(db.String(255), nullable=False)
    # promotion_channel = db.Column(db.String(255), nullable=False)
    # promotion_type_name = db.Column(db.String(255), nullable=False)
    # recommendation_id = db.Column(db.BigInteger, nullable=False)
    # recommendation_name = db.Column(db.String(255), nullable=False)
    # current_volume = db.Column(db.BigInteger, nullable=False)
    # optimization_volume = db.Column(db.BigInteger, nullable=False)
    # strategic_volume = db.Column(db.BigInteger, nullable=False)
    # proposed_volume = db.Column(db.BigInteger, nullable=False)
    # variation_volume = db.Column(db.BigInteger, nullable=False)
    # base_price = db.Column(DOUBLE, nullable=False)
    # current_price = db.Column(DOUBLE, nullable=False)
    # optimization_price = db.Column(DOUBLE, nullable=False)
    # proposed_price = db.Column(DOUBLE, nullable=False)
    # strategic_price = db.Column(DOUBLE, nullable=False)
    # variation_current_opt_price = db.Column(DOUBLE, nullable=False)
    # variation_base_proposed_price = db.Column(DOUBLE, nullable=False)
    # variation_proposed_current_price = db.Column(DOUBLE, nullable=False)
    # discount = db.Column(DOUBLE, nullable=False)
    # proposed_ro = db.Column(DOUBLE, nullable=False)
    # customer_margin = db.Column(DOUBLE, nullable=False)
    # recommended_pvp = db.Column(DOUBLE, nullable=False)
    # critical_price = db.Column(DOUBLE, nullable=False)
    # oc_adim = db.Column(DOUBLE, nullable=False)
    # oc_adim_sale = db.Column(DOUBLE, nullable=False)
    # oc_pesos = db.Column(DOUBLE, nullable=False)
    # oc_pesos_kilos = db.Column(DOUBLE, nullable=False)
    # direct_cost = db.Column(DOUBLE, nullable=False)
    # product_state = db.Column(db.String(255), nullable=False)
    # brand_code = db.Column(db.BigInteger, nullable=False)
    # units_x_product = db.Column(db.BigInteger, nullable=False)
    # avg_weight = db.Column(DOUBLE, nullable=False)
    # start_sellin = db.Column(db.Date, nullable=False)
    # end_sellin = db.Column(db.Date, nullable=False)
    # start_sellout = db.Column(db.Date, nullable=False)
    # end_sellout = db.Column(db.Date, nullable=False)
    promotional_variables_json = db.Column(db.String(255), nullable=False)
    promotionalstate_id = db.Column(db.BigInteger, nullable=False)
    promotionalstate_phase = db.Column(db.String(255), nullable=False)
    promotionalstate_state = db.Column(db.String(255), nullable=False)
    # active = db.Column(db.BigInteger, nullable=False)
    # model = db.Column(db.BigInteger, nullable=False)
    # on_edit = db.Column(db.BigInteger, nullable=False)
    # brand = db.Column(db.String(255), nullable=False)
    # short_brand = db.Column(db.String(255), nullable=False)
    # family = db.Column(db.String(255), nullable=False)
    # subfamily = db.Column(db.String(255), nullable=False)
    # strategy_name = db.Column(db.String(255), nullable=False)
    # eb_variation = db.Column(DOUBLE, nullable=False)
    # ob_variation = db.Column(DOUBLE, nullable=False)
    # elasticity = db.Column(DOUBLE, nullable=False)
    # tooltip_base_pxu = db.Column(DOUBLE, nullable=False)
    # tooltip_base_sp = db.Column(DOUBLE, nullable=False)
    # tooltip_current_pxu = db.Column(DOUBLE, nullable=False)
    # tooltip_current_sp = db.Column(DOUBLE, nullable=False)
    # tooltip_optimization_pxu = db.Column(DOUBLE, nullable=False)
    # tooltip_optimization_sp = db.Column(DOUBLE, nullable=False)
    # tooltip_strategic_pxu = db.Column(DOUBLE, nullable=False)
    # tooltip_strategic_sp = db.Column(DOUBLE, nullable=False)
    # created_at = db.Column(db.DateTime, nullable=False)
    # updated_at = db.Column(db.DateTime, nullable=False)


